# Java
# Package your Java project.
# Add steps that install, analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

trigger:
  batch: true
  branches:
    include:
      - master
      - ithc

  tags:
    include:
      - v*

pr:
  autoCancel: true
  branches:
    include:
      - master

variables:
  #  group: pipeline-env-variables
  ${{ if eq( variables['Build.Reason'], 'PullRequest') }}:
    environment: 'test'
    env.upper: 'TEST'
  ${{ if ne( variables['Build.Reason'], 'PullRequest') }}:
    environment: 'stg' #Unset test and promoting to stg until prod is ready
    env.upper: 'STG'
  env.prom: 'prod'
  env.prom.upper: 'PROD'
  application.name: 'pcq-consolidation-service'
  azure.container.registry: 'ssprivate$(env).azurecr.io'
  azure.subscription.endpoint: 'DTS-SHAREDSERVICES-$(env.upper)'
  azure.aks.resourcegroup: 'ss_$(env)_kubernetes_resource_group'
  azure.aks.cluster: 'ss_aks_$(env)'
  azure.prom.subscription.endpoint: 'DTS-SHAREDSERVICES-$(env.prom.upper)'
  azure.prom.aks.resourcegroup: 'ss_$(env.prom)_kubernetes_resource_group'
  azure.prom.aks.cluster: 'ss_aks_$(env.prom)'
  manual.branch.prefix: 'master'
  product: 'pcq'
  vault: 'pcq-$(env)'
  azure.prom.acr: 'ssprivate$(env.prom)'

stages:
  - template: pipeline-steps/templates/build-deploy-stage.yaml@mi-core
    parameters:
      env: $(environment)
      applicationName: $(application.name)
      product: $(product)
      azureVault: $(vault)
      chartEnv: $(environment)
      promEnv: $(env.prom)
      mutationTest: False
      functionalPostDeployTest: true
      integrationTest: true
      azureSecreKeys: 'jwt-secret'
      azureKeyMapping:
        - key: JWT_SECRET
          value: 'jwt-secret'